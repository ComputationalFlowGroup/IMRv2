% file f_compute_perturb_coeffs.m
% brief contains function f_compute_perturb_coeffs

% brief This function computes the coefficients for the linearized bubble
% surface perturbation evolution equation
function [eta, xi] = f_compute_perturb_coeffs(R, U, Rddot, n, Ro, We, Re, Ca, Ca2, alpha)

    lam = R/Ro;
    if isequal(Ca, Inf)
        eta = 3.*U./R+2.*(n+1).*(n+2)./(Re.*R^2);
        xi = -(n-1).*Rddot./R+4.*(n-1).*(n+1).*1./Re.*U./R^3+(n-1).*(n+ ...
              1).*(n+2)./(2.*We.*R^3);
        xi = xi'; eta = eta';
    else

        % pre allocattion for only inertial case
        eta = 4.*(5+2.*n).*U./((4+n).*R);
        xi = 6.*(n+2)./(n+4).*U^2./R^2+(8+n-n.^2).*Rddot./((n+4).*R);


        for i = 1:length(n)
            % --- First-order elastic term (coefficient of G) ---
            elast = 1/(lam^11.*(6+n(i)).*(9+n(i)).*(12+n(i)).*Ro^2).*(1+n(i)).*(2.*lam^5.*(1+ ...
                2.*lam^3-lam^6+n(i)).*(648+234.*n(i)+27.*n(i)^2+n(i)^3)+lam^3.*(-1+lam^3).*(13+ ...
                n(i)).*(-n(i).*(14+9.*n(i)+n(i)^2)+2.*lam^6.*(54+15.*n(i)+n(i)^2)+lam^3.*n(i).*(86+ ...
                35.*n(i)+3.*n(i)^2)).*hyp2f1(-(1/3),4+n(i)/3,5+n(i)/3,1-1/lam^3)+(-1+ ...
                lam^3).*(-2.*lam^9.*(54+15.*n(i)+n(i)^2)+lam^6.*n(i).*(54+69.*n(i)+16.*n(i)^2+ ...
                n(i)^3)+n(i).*(140+104.*n(i)+19.*n(i)^2+n(i)^3)-lam^3.*n(i).*(266+199.*n(i)+ ...
                37.*n(i)^2+2.*n(i)^3)).*hyp2f1(2/3,4+n(i)/3,5+n(i)/3,1-1/lam^3));

            % --- Second-order elastic term (coefficient of α.*G) ---
            sselast = -(1/(81.*lam^10.*Ro^2)).*(1+n(i)).*(162.*(-1+lam^3)^2.*(3+2.*lam^3-3.*lam^4+2.*lam^6)-162.*(2-3.*lam^4+lam^6).*(2+n(i))+ ...
                (1/lam).*((1/((3+n(i)).*(6+n(i)).*(9+n(i)).*(12+n(i)))).*162.*(lam^3.*((14+n(i)).*(-2.*lam^12.*(3+n(i)).*(6+n(i)).*(9+n(i))- ...
                2.*lam^9.*(1+n(i)).*(3+n(i)).*(6+n(i)).*(9+n(i))+2.*n(i).*(81+n(i).*(65+n(i).*(14+n(i))))-2.*lam^3.*(81+n(i).*(414+n(i).*(265+ ...
                n(i).*(49+3.*n(i)))))+lam^6.*(-162+n(i).*(630+n(i).*(517+n(i).*(101+6.*n(i)))))).*hyp2f1(-(2/3),4+n(i)/3,5+n(i)/3,1-1/lam^3)- ...
                3.*(13+n(i)).*((-1+n(i)).*n(i)-lam^9.*(3+n(i)).*(6+n(i)).*(9+n(i))-lam^3.*n(i).*(43+n(i).*(25+2.*n(i)))-lam^6.*(162+n(i).*(109+ ...
                9.*n(i)))).*hyp2f1(-(1/3),4+n(i)/3,5+n(i)/3,1-1/lam^3))-2.*(-2.*lam^15.*(3+n(i)).*(6+n(i)).*(9+n(i))-2.*lam^12.*(1+n(i)).*(3+ ...
                n(i)).*(6+n(i)).*(9+n(i))-lam^9.*(3+n(i)).*(6+n(i)).*(9+n(i)).*(1+n(i).*(3+n(i)))+n(i).*(1215+n(i).*(994+n(i).*(255+n(i).*(27+ ...
                n(i)))))-lam^3.*n(i).*(3483+n(i).*(2852+n(i).*(737+n(i).*(79+3.*n(i)))))+lam^6.*(-162+n(i).*(2817+n(i).*(2452+n(i).*(667+ ...
                3.*n(i).*(25+n(i))))))).*hyp2f1(1/3,4+n(i)/3,5+n(i)/3,1-1/lam^3)+3.*(-lam^9.*(3+n(i)).*(6+n(i)).*(9+n(i))-lam^12.*(3+ ...
                n(i)).*(6+n(i)).*(9+n(i))+(-1+n(i)).*n(i).*(10+n(i))-lam^3.*(-1+n(i)).*n(i).*(29+3.*n(i))+lam^6.*n(i).*(-73+n(i).*(2+ ...
                n(i)))).*hyp2f1(2/3,4+n(i)/3,5+n(i)/3,1-1/lam^3))+(1/((3+n(i)).*(12+n(i)))).*162.*lam^3.*(2.*lam^3+n(i)).*((2+lam^6).*(3+ ...
                n(i)).*(14+n(i)).*hyp2f1(-(2/3),4+n(i)/3,5+n(i)/3,1-1/lam^3)-2.*(2+lam^6).*(3+n(i)).*hyp2f1(1/3,4+n(i)/3,5+n(i)/3,1-1/lam^3)+ ...
                3.*(12+n(i)).*(-((1+n(i)).*hyp2f1(2/3,(3+n(i))/3,(6+n(i))/3,1-1/lam^3))-2.*hyp2f1(5/3,(3+n(i))/3,(6+n(i))/3,1-1/lam^3)))- ...
                n(i).*gamma(1+n(i)/3).*((1/gamma(5+n(i)/3)).*lam^3.*(14+n(i)).*(18.*(1+7.*lam^3)+2.*lam^9.*(1+n(i)).*(3+n(i)).*(6+n(i)).*(9+ ...
                n(i))-n(i).*(187+n(i).*(146+n(i).*(31+2.*n(i))))+2.*lam^3.*n(i).*(367+n(i).*(246+n(i).*(49+3.*n(i))))-lam^6.*(-180+n(i).*(565+ ...
                n(i).*(478+99.*n(i)+6.*n(i)^2)))).*hyp2f1(-(2/3),4+n(i)/3,5+n(i)/3,1-1/lam^3)-(1/gamma(5+n(i)/3)).*2.*(18.*(-8+25.*lam^3)+ ...
                2.*lam^12.*(1+n(i)).*(3+n(i)).*(6+n(i)).*(9+n(i))+lam^9.*(1+n(i)).*(2+n(i)).*(3+n(i)).*(6+n(i)).*(9+n(i))+lam^3.*n(i).*(8+ ...
                n(i)).*(445+n(i).*(291+n(i).*(55+3.*n(i))))-n(i).*(1249+n(i).*(973+n(i).*(254+n(i).*(27+n(i)))))-lam^6.*(306+n(i).*(3013+ ...
                n(i).*(2427+n(i).*(664+3.*n(i).*(25+n(i))))))).*hyp2f1(1/3,4+n(i)/3,5+n(i)/3,1-1/lam^3)-(81.*lam^3.*((12+19.*n(i)+8.*n(i)^2+ ...
                n(i)^3+4.*lam^3.*(1+n(i)).*(3+n(i))+lam^6.*(5+n(i)).*(8+n(i).*(7+n(i)))).*hyp2f1(2/3,(3+n(i))/3,(6+n(i))/3,1-1/lam^3)+2.*(3+ ...
                n(i)).*(4+4.*lam^3+n(i)).*hyp2f1(5/3,(3+n(i))/3,(6+n(i))/3,1-1/lam^3)))/((4+n(i)).*(7+n(i)).*gamma((6+n(i))/3)))));
            
            % --- MR elastic term (coefficient of G2) ---
            MRelast = (1/(lam^11.*(6+n(i)).*(9+n(i)).*(12+n(i)).*Ro^2)).*(1+n(i)).*(2.*lam^7.*(1+2.*lam^9+lam^6.*(-1+n(i))).*(648+234.*n(i)+ ...
                27.*n(i)^2+n(i)^3)+lam^3.*(-1+lam^3).*(14+n(i)).*(-4.*lam^12.*(54+15.*n(i)+n(i)^2)+n(i).*(80+66.*n(i)+15.*n(i)^2+n(i)^3)- ...
                2.*lam^9.*(54+69.*n(i)+16.*n(i)^2+n(i)^3)+lam^6.*n(i).*(54+69.*n(i)+16.*n(i)^2+n(i)^3)-lam^3.*n(i).*(170+139.*n(i)+31.*n(i)^2+ ...
                2.*n(i)^3)).*hyp2f1(-(2/3),4+n(i)/3,5+n(i)/3,1-1/lam^3)-(-1+lam^3).*(-8.*lam^15.*(54+15.*n(i)+n(i)^2)-4.*lam^12.*(54+69.*n(i)+ ...
                16.*n(i)^2+n(i)^3)+2.*lam^9.*n(i).*(54+69.*n(i)+16.*n(i)^2+n(i)^3)+lam^6.*n(i).*(540+528.*n(i)+169.*n(i)^2+22.*n(i)^3+n(i)^4)- ...
                2.*lam^3.*n(i).*(800+740.*n(i)+216.*n(i)^2+25.*n(i)^3+n(i)^4)+n(i).*(880+806.*n(i)+231.*n(i)^2+26.*n(i)^3+ ...
                n(i)^4)).*hyp2f1(1/3,4+n(i)/3,5+n(i)/3,1-1/lam^3));

            % --- Viscous term (coefficient of μ) for eta ---
            visceta = 2.*(n(i)+1).*(n(i)+2)./R.^2;

            % --- Viscous term (coefficient of μ) for xi ---
            viscxi = (n(i).*(n(i)+1).*(20+7.*n(i))).*U./((6+n(i)).*R^3);

            % --- Surface tension term (coefficient of γ) ---
            surften = ((n(i)+1).*(n(i)-1).*(n(i)+2)./R^3);

            % Correcting coefficients
            xi(i) = xi(i) + 1/Ca*elast + alpha/Ca*sselast + 1/Ca2*MRelast + 1/(2*We)*surften + 1/Re*viscxi;
            eta(i) = eta(i) + 1/Re*visceta;
        end
        xi = xi'; eta = eta';
    end
end
